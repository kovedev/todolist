{"version":3,"sources":["todolist/types.js","root/rootReducer.js","todolist/reducer.js","todolist/actions.js","todolist/requests.js","todolist/saga.js","root/rootSaga.js","root/storeConfig.js","reportWebVitals.js","topNavigation/topNavigation.js","App.js","todolist/todoListPage.js","errorPage/errorPage.js","root/routes.js","index.js"],"names":["FETCH_TODOLIST_DATA","RECEIVE_TODOLIST_DATA","TODOLIST_DATA_NOT_FOUND","CREATE_TODOLIST_ITEM","DELETE_TODOLIST_ITEM","UPDATE_TODOLIST_ITEM","allReducers","todoList","createSlice","name","initialState","isFetchingTodoListData","todoListData","reducers","extraReducers","state","action","payload","combineReducers","createReducer","injectedReducers","fetchTodoListData","createAction","todoListDataNotFound","config","headers","axios","get","createTodoListItem","post","deleteTodoListItem","id","delete","updateTodoListItem","data","patch","fetchTodoListDataSaga","createTodoListItemSaga","deleteTodoListItemSaga","updateTodoListItemSaga","counterSaga","call","status","put","console","error","fetchTodoListDataAction","all","fork","takeEvery","rootSaga","todoListSaga","history","createBrowserHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","withRouter","className","to","getRouteById","Routes","HOME","App","children","TodoListPage","props","inputChange","event","setState","newTodoItem","target","value","createTodoListItemFunction","preventDefault","text","deleteTodoListItemFunction","updateTodoListItemFunction","this","onSubmit","todoListItems","map","item","index","onChange","onClick","disabled","type","Component","mapDispatchToProps","connect","ErrorPage","routes","exact","path","component","store","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","runSaga","run","middlewares","routerMiddleware","enhancers","createInjectorsEnhancer","router","connectRouter","configureStore","reducer","middleware","getDefaultMiddleware","preloadedState","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c01437f.chunk.js","sourcesContent":["export const FETCH_TODOLIST_DATA = 'todolist/FETCH_TODOLIST_DATA';\nexport const RECEIVE_TODOLIST_DATA = 'todolist/RECEIVE_TODOLIST_DATA';\nexport const TODOLIST_DATA_NOT_FOUND = 'todolist/TODOLIST_DATA_NOT_FOUND';\nexport const CREATE_TODOLIST_ITEM = 'todolist/CREATE_TODOLIST_ITEM';\nexport const DELETE_TODOLIST_ITEM = 'todolist/DELETE_TODOLIST_ITEM';\nexport const UPDATE_TODOLIST_ITEM = 'todolist/UPDATE_TODOLIST_ITEM';","import { combineReducers } from '@reduxjs/toolkit';\n\nimport todoListReducer from '../todolist/reducer';\n\nconst allReducers = { \n  todoList: todoListReducer,\n};\n\nexport let rootReducer = combineReducers({\n  ...allReducers,\n});\n\nexport default function createReducer(injectedReducers = {}){\n  rootReducer = combineReducers({\n    ...allReducers,\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  FETCH_TODOLIST_DATA,\n  RECEIVE_TODOLIST_DATA,\n  TODOLIST_DATA_NOT_FOUND,\n  CREATE_TODOLIST_ITEM,\n  DELETE_TODOLIST_ITEM,\n  UPDATE_TODOLIST_ITEM,\n} from './types';\n\nconst initialState = {\n  isFetchingTodoListData: false,\n  todoListData: null,\n};\n\nconst todoListSlice = createSlice({\n  name: 'todolist',\n  initialState,\n  reducers: {\n  },\n  extraReducers: {\n    [FETCH_TODOLIST_DATA]: (state, action) => {\n      state.isFetchingTodoListData = true;\n    },\n    [TODOLIST_DATA_NOT_FOUND]: (state, action) => {\n      state.isFetchingTodoListData = false;\n    },\n    [RECEIVE_TODOLIST_DATA]: (state, action) => {\n      state.isFetchingTodoListData = false;\n      state.todoListData = action.payload;\n    },\n    [CREATE_TODOLIST_ITEM]: (state, action) => {\n      state.isFetchingTodoListData = true;\n    },\n    [DELETE_TODOLIST_ITEM]: (state, action) => {\n      state.isFetchingTodoListData = true;\n    },\n    [UPDATE_TODOLIST_ITEM]: (state, action) => {\n      state.isFetchingTodoListData = true;\n    },\n  }\n});\n\nexport default todoListSlice.reducer;","import { createAction } from 'redux-actions';\n\nimport {\n  FETCH_TODOLIST_DATA,\n  RECEIVE_TODOLIST_DATA,\n  TODOLIST_DATA_NOT_FOUND,\n  CREATE_TODOLIST_ITEM,\n  DELETE_TODOLIST_ITEM,\n  UPDATE_TODOLIST_ITEM,\n} from './types';\n\nexport const fetchTodoListData = () => createAction(FETCH_TODOLIST_DATA)();\nexport const receiveTodoListData = (payload) => createAction(RECEIVE_TODOLIST_DATA)(payload);\nexport const todoListDataNotFound = () => createAction(TODOLIST_DATA_NOT_FOUND);\nexport const createTodoListItem = (payload) => createAction(CREATE_TODOLIST_ITEM)(payload);\nexport const deleteTodoListItem = (payload) => createAction(DELETE_TODOLIST_ITEM)(payload);\nexport const updateTodoListItem = (payload) => createAction(UPDATE_TODOLIST_ITEM)(payload);","import axios from 'axios';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n};\n\nexport const fetchTodoListData = () => {\n  return axios.get('/api/todolist');\n};\n\nexport const createTodoListItem = (payload) => {\n  return axios.post('/api/todolist', payload, config);\n};\n\nexport const deleteTodoListItem = (id) => {\n  return axios.delete('/api/todolist/' + id, config);\n};\n\nexport const updateTodoListItem = ({id, data}) => {\n  return axios.patch('/api/todolist/' + id, data, config);\n};","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { \n  fetchTodoListData as fetchTodoListDataAction, \n  receiveTodoListData, \n  todoListDataNotFound \n} from './actions';\nimport { fetchTodoListData, createTodoListItem, deleteTodoListItem, updateTodoListItem } from './requests';\nimport {\n  FETCH_TODOLIST_DATA,\n  CREATE_TODOLIST_ITEM,\n  DELETE_TODOLIST_ITEM,\n  UPDATE_TODOLIST_ITEM,\n} from './types';\n\nexport function* fetchTodoListDataSaga() {\n  try {\n    const { data, status } = yield call(fetchTodoListData);\n    switch (status) {\n      case 200:\n        yield put(receiveTodoListData(data));\n        break;\n      default:\n        yield put(todoListDataNotFound());\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to fetch todoList data with error \"%s\"', error);\n    yield put(todoListDataNotFound());\n  }\n};\n\nexport function* createTodoListItemSaga({payload}) {\n  try {\n    const { status } = yield call(createTodoListItem, payload);\n    switch (status) {\n      case 200:\n        yield put(fetchTodoListDataAction());\n        break;\n      default:\n        yield put(todoListDataNotFound());\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to create todoList item with error \"%s\"', error);\n    yield put(todoListDataNotFound());\n  }\n};\n\nexport function* deleteTodoListItemSaga({payload}) {\n  try {\n    const { status } = yield call(deleteTodoListItem, payload);\n    switch (status) {\n      case 200:\n        yield put(fetchTodoListDataAction());\n        break;\n      default:\n        yield put(todoListDataNotFound());\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to delete todoList item with error \"%s\"', error);\n    yield put(todoListDataNotFound());\n  }\n};\n\nexport function* updateTodoListItemSaga({payload}) {\n  try {\n    const { status } = yield call(updateTodoListItem, payload);\n    switch (status) {\n      case 200:\n        yield put(fetchTodoListDataAction());\n        break;\n      default:\n        yield put(todoListDataNotFound());\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to update todoList item with error \"%s\"', error);\n    yield put(todoListDataNotFound());\n  }\n};\n\nexport default function* counterSaga() {\n  yield all([\n    fork(function*() {\n      yield takeEvery(FETCH_TODOLIST_DATA, fetchTodoListDataSaga);\n      yield takeEvery(CREATE_TODOLIST_ITEM, createTodoListItemSaga);\n      yield takeEvery(DELETE_TODOLIST_ITEM, deleteTodoListItemSaga);\n      yield takeEvery(UPDATE_TODOLIST_ITEM, updateTodoListItemSaga);\n    }),\n  ]);\n};","import { all, fork } from 'redux-saga/effects';\nimport todoListSaga from '../todolist/saga';\n\nexport default function* rootSaga() {\t  \n  yield all([\t    \n    fork(todoListSaga),\n  ]);\n}","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { createInjectorsEnhancer } from 'redux-injectors';\nimport createReducer from './rootReducer';\nimport rootSaga from './rootSaga';\nimport { createBrowserHistory } from 'history';\n\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\n\nexport const history = createBrowserHistory();\n\nexport default function configureAppStore(initialState = {}) {\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n  const { run: runSaga } = sagaMiddleware;\n\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n  const enhancers = [\n    createInjectorsEnhancer({\n      createReducer,\n      runSaga,\n    }),\n  ];\n\n  const router = { \n    router: connectRouter(history),\n  };\n\n  const store = configureStore({\n    reducer: createReducer(router),\n    middleware: [\n      ...getDefaultMiddleware(),\n      ...middlewares\n    ],\n    preloadedState: initialState,\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers,\n  });\t\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { Routes, getRouteById } from '../root/routes';\nimport './topNavigation.css'; \n\nconst TopNavigation = () => {\n  return (\n    <div className='top-navigation'>\n      <Link to={getRouteById(Routes.HOME)}>\n        Home\n      </Link>\n    </div>\n  );\n};\n  \nexport default withRouter(TopNavigation);","import React from 'react';\nimport TopNavigation from './topNavigation/topNavigation';\nimport './App.css';\n\nconst App = ({\n  children,\n}) => {\n  return (\n    <div className=\"body\">\n      <TopNavigation/>\n      {children}\n    </div>\n  );\n};\n\nexport default App;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RootState } from '../root/rootReducer';\nimport {\n  fetchTodoListData,\n  createTodoListItem,\n  deleteTodoListItem,\n  updateTodoListItem,\n} from './actions';\nimport './todoListPage.css'; \n\nclass TodoListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newTodoItem: ''\n    };\n  }\n\n  componentDidMount() {\n    const { fetchTodoListData, isFetchingTodoListData, todoListData } = this.props;\n    if(!todoListData && !isFetchingTodoListData)\n      fetchTodoListData();\n  }\n\n  inputChange = (event) => {\n    this.setState({newTodoItem: event.target.value});\n  }\n\n  createTodoListItemFunction = (event) => {\n    const { createTodoListItem, isFetchingTodoListData } = this.props;\n    const { newTodoItem } = this.state;\n    event.preventDefault();\n    if(!isFetchingTodoListData){\n      createTodoListItem({\n        text: newTodoItem,\n      });\n      this.setState({newTodoItem: ''});\n    }\n  }\n\n  deleteTodoListItemFunction = (id) => {\n    const { deleteTodoListItem, isFetchingTodoListData } = this.props;\n    if(!isFetchingTodoListData)\n      deleteTodoListItem(id);\n  }\n\n  updateTodoListItemFunction = (event, id) => {\n    const { updateTodoListItem, isFetchingTodoListData } = this.props;\n    if(!isFetchingTodoListData)\n      updateTodoListItem({\n        id: id,\n        data: {\n          text: event.target.value\n        },\n      });\n  }\n\n  render() {\n    const { todoListData, isFetchingTodoListData } = this.props;\n    const { newTodoItem } = this.state;\n\n    if(!todoListData && isFetchingTodoListData)\n      return (<div>spinner</div>)\n\n    return (\n      <form onSubmit={this.createTodoListItemFunction}>\n        <div className='todo-list'>\n          <div className='todo-list-title'>\n            TODO List:\n          </div>\n          {(todoListData && todoListData.todoListItems) &&\n            todoListData.todoListItems.map((item, index) => \n              <div key={index} className='todo-list-item'>\n                <textarea\n                  className='todo-list-textarea'\n                  value={item.text}\n                  onChange={(event)=>this.updateTodoListItemFunction(event, item.id)} />\n                <button className='todo-list-button' onClick={()=>this.deleteTodoListItemFunction(item.id)}>\n                  Delete\n                </button>\n              </div>\n            )}\n          <div className='todo-list-title'>\n            Add new todo item:\n          </div>\n            <div className='todo-list-item'>\n              <textarea \n                className='todo-list-textarea' \n                value={newTodoItem} \n                onChange={this.inputChange}/>\n              <input className='todo-list-button' disabled={!newTodoItem} type=\"submit\" value=\"Add\" />\n            </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchTodoListData,\n  createTodoListItem,\n  deleteTodoListItem,\n  updateTodoListItem,\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  isFetchingTodoListData: state.todoList.isFetchingTodoListData,\n  todoListData: state.todoList.todoListData,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListPage);","import React, { Component } from 'react';\n\nclass ErrorPage extends Component{\n  render() {\n    return (\n      <div>\n        404 Page not found\n      </div>\n    );\n  }\n}\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport App from '../App';\nimport TodoListPage from '../todolist/todoListPage';\nimport ErrorPage from '../errorPage/errorPage';\n\nexport const Routes = {\n  HOME: 'home',\n};\n\nexport const getRouteById = (id: string): string => {\n  const routes = {\n    [Routes.HOME]: '/',\n  };\n  return routes[id] ? routes[id] : '';\n};\n\nexport default\n<App>\n  <Switch>\n    <Route exact path='/' component={TodoListPage} />\n    <Route component={ErrorPage} />\n  </Switch>\n</App>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport configureStore, { history } from './root/storeConfig';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport routes from './root/routes';\nconst initialState = {};\nconst store = configureStore(initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      {routes}\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}