{"version":3,"sources":["eventData/types.js","eventData/reducer.js","auth/types.js","utils/localStorageUtils.js","auth/reducer.js","root/rootReducer.js","eventData/actions.js","utils/config.js","eventData/requests.js","eventData/saga.js","auth/actions.js","auth/requests.js","auth/saga.js","root/rootSaga.js","root/storeConfig.js","reportWebVitals.js","topNavigation/topNavigation.js","auth/loginForm.js","App.js","utils/formatDate.js","eventData/eventDataTable.js","eventData/eventHistoryDataTable.js","eventData/eventDataPage.js","errorPage/errorPage.js","root/routes.js","index.js"],"names":["FETCH_EVENT_DATA","RECEIVE_EVENT_DATA","EVENT_DATA_NOT_FOUND","SAVE_EVENT_DATA","FETCH_EVENT_HISTORY_DATA","RECEIVE_EVENT_HISTORY_DATA","EVENT_HISTORY_DATA_NOT_FOUND","eventDataSlice","createSlice","name","initialState","isFetchingEventData","isFetchingEventHistoryData","eventData","eventHistoryData","reducers","extraReducers","state","action","payload","LOGIN","SIGNUP","RECEIVE_ACCESS_TOKEN","ACCESS_TOKEN_NOT_FOUND","LOGOUT","prefix","getStorageItem","key","JSON","parse","localStorage","getItem","buildStorageKey","setStorageItem","value","stringify","setItem","removeStorageItem","removeItem","join","email","accessToken","isFetching","errorMessage","allReducers","eventDataReducer","auth","combineReducers","createReducer","injectedReducers","receiveEventData","createAction","eventDataNotFound","fetchEventHistoryData","eventHistoryDataNotFound","config","headers","fetchEventData","axios","get","saveEventData","post","fetchEventDataSaga","saveEventDataSaga","fetchEventHistoryDataSaga","counterSaga","call","data","status","put","console","error","fetchEventHistoryDataAction","all","fork","takeEvery","receiveAccessToken","accessTokenNotFound","signUp","login","signUpSaga","loginSaga","authSaga","rootSaga","eventDataSaga","history","createBrowserHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mapDispatchToProps","logout","connect","withRouter","className","to","getRouteById","Routes","HOME","onClick","props","useState","setEmail","password","setPassword","newUser","setNewUser","onSubmit","event","preventDefault","type","placeholder","onChange","e","target","disabled","children","formatDate","date","Date","toLocaleDateString","toLocaleTimeString","EventDataTable","sensor1","sensor2","sensor3","sensor4","EventHistoryDataTable","index","setIndex","length","useEffect","ErrorPage","id","routes","exact","path","component","EventDataPage","store","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","runSaga","run","middlewares","routerMiddleware","enhancers","createInjectorsEnhancer","router","connectRouter","configureStore","reducer","middleware","getDefaultMiddleware","preloadedState","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f47bfa6.chunk.js","sourcesContent":["export const FETCH_EVENT_DATA = 'event-data/FETCH_EVENT_DATA';\nexport const RECEIVE_EVENT_DATA = 'event-data/RECEIVE_EVENT_DATA';\nexport const EVENT_DATA_NOT_FOUND = 'event-data/EVENT_DATA_NOT_FOUND';\nexport const SAVE_EVENT_DATA = 'event-data/SAVE_EVENT_DATA';\nexport const FETCH_EVENT_HISTORY_DATA = 'event-data/FETCH_EVENT_HISTORY_DATA';\nexport const RECEIVE_EVENT_HISTORY_DATA = 'event-data/RECEIVE_EVENT_HISTORY_DATA';\nexport const EVENT_HISTORY_DATA_NOT_FOUND = 'event-data/EVENT_HISTORY_DATA_NOT_FOUND';\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  FETCH_EVENT_DATA,\n  RECEIVE_EVENT_DATA,\n  EVENT_DATA_NOT_FOUND,\n  SAVE_EVENT_DATA,\n  FETCH_EVENT_HISTORY_DATA,\n  RECEIVE_EVENT_HISTORY_DATA,\n  EVENT_HISTORY_DATA_NOT_FOUND,\n} from './types';\n\nconst initialState = {\n  isFetchingEventData: false,\n  isFetchingEventHistoryData: false,\n  eventData: null,\n  eventHistoryData: null,\n};\n\nconst eventDataSlice = createSlice({\n  name: 'event-data',\n  initialState,\n  reducers: {\n  },\n  extraReducers: {\n    [FETCH_EVENT_DATA]: (state, action) => {\n      state.isFetchingEventData = true;\n    },\n    [EVENT_DATA_NOT_FOUND]: (state, action) => {\n      state.isFetchingEventData = false;\n    },\n    [RECEIVE_EVENT_DATA]: (state, action) => {\n      state.isFetchingEventData = false;\n      state.eventData = action.payload;\n    },\n    [SAVE_EVENT_DATA]: (state, action) => {\n      state.isFetchingEventHistoryData = true;\n    },\n    [FETCH_EVENT_HISTORY_DATA]: (state, action) => {\n      state.isFetchingEventHistoryData = true;\n    },\n    [EVENT_HISTORY_DATA_NOT_FOUND]: (state, action) => {\n      state.isFetchingEventHistoryData = false;\n    },\n    [RECEIVE_EVENT_HISTORY_DATA]: (state, action) => {\n      state.isFetchingEventHistoryData = false;\n      state.eventHistoryData = action.payload;\n    },\n  }\n});\n\nexport default eventDataSlice.reducer;","export const LOGIN = 'auth/LOGIN';\nexport const SIGNUP = 'auth/SIGNUP';\nexport const RECEIVE_ACCESS_TOKEN = 'auth/RECEIVE_ACCESS_TOKEN';\nexport const ACCESS_TOKEN_NOT_FOUND = 'auth/ACCESS_TOKEN_NOT_FOUND';\nexport const LOGOUT = 'auth/LOGOUT';","const prefix = 'event-data';\n\nexport const getStorageItem = (key) => {\n  return JSON.parse(localStorage.getItem(buildStorageKey(key))) || '';\n};\n\nexport const setStorageItem = (key, value) => {\n  value = JSON.stringify(value);\n  localStorage.setItem(buildStorageKey(key), value);\n};\n\nexport const removeStorageItem = (key) => {\n  localStorage.removeItem(buildStorageKey(key));\n};\n\nconst buildStorageKey = (key) => {\n  return [prefix, key].join(':');\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { LOGIN, SIGNUP, ACCESS_TOKEN_NOT_FOUND, RECEIVE_ACCESS_TOKEN, LOGOUT } from './types';\nimport { setStorageItem, getStorageItem, removeStorageItem } from '../utils/localStorageUtils';\n\nconst initialState = {\n  email: getStorageItem('email'),\n  accessToken: getStorageItem('accessToken'),\n  isFetching: false,\n  errorMessage: '',\n};\n\nconst countSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n  },\n  extraReducers: {\n    [LOGIN]: (state) => {\n      state.isFetching = true;\n    },\n    [SIGNUP]: (state) => {\n      state.isFetching = true;\n    },\n    [ACCESS_TOKEN_NOT_FOUND]: (state, action) => {\n      state.isFetching = false;\n      state.errorMessage = action.payload;\n    },\n    [RECEIVE_ACCESS_TOKEN]: (state, action) => {\n      setStorageItem('accessToken', action.payload.accessToken);\n      setStorageItem('email', action.payload.email);\n      state.isFetching = false;\n      state.accessToken = action.payload.accessToken;\n      state.email = action.payload.email;\n    },\n    [LOGOUT]: (state) => {\n      removeStorageItem('accessToken');\n      removeStorageItem('email');\n      state.accessToken = '';\n      state.email = '';\n    },\n  }\n});\n\nexport default countSlice.reducer;","import { combineReducers } from '@reduxjs/toolkit';\n\nimport eventDataReducer from '../eventData/reducer';\nimport authReducer from '../auth/reducer';\n\nconst allReducers = { \n  eventData: eventDataReducer,\n  auth: authReducer,\n};\n\nexport let rootReducer = combineReducers({\n  ...allReducers,\n});\n\nexport default function createReducer(injectedReducers = {}){\n  rootReducer = combineReducers({\n    ...allReducers,\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;","import { createAction } from 'redux-actions';\nimport {\n  FETCH_EVENT_DATA,\n  RECEIVE_EVENT_DATA,\n  EVENT_DATA_NOT_FOUND,\n  SAVE_EVENT_DATA,\n  FETCH_EVENT_HISTORY_DATA,\n  RECEIVE_EVENT_HISTORY_DATA,\n  EVENT_HISTORY_DATA_NOT_FOUND,\n} from './types';\n\nexport const fetchEventData = (payload) => createAction(FETCH_EVENT_DATA)(payload);\n\nexport const receiveEventData = (payload) => createAction(RECEIVE_EVENT_DATA)(payload);\n\nexport const eventDataNotFound = () => createAction(EVENT_DATA_NOT_FOUND)();\n\nexport const saveEventData = (payload) => createAction(SAVE_EVENT_DATA)(payload);\n\nexport const fetchEventHistoryData = () => createAction(FETCH_EVENT_HISTORY_DATA)();\n\nexport const receiveEventHistoryData = (payload) => createAction(RECEIVE_EVENT_HISTORY_DATA)(payload);\n\nexport const eventHistoryDataNotFound = (payload) => createAction(EVENT_HISTORY_DATA_NOT_FOUND)(payload);\n","export const config = {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n};","import axios from 'axios';\nimport { config } from '../utils/config';\n\nexport const fetchEventData = (accessToken) => {\n  return axios.get('https://opendata.hopefully.works/api/events', {\n    headers: {\n      'Authorization': `Bearer ${accessToken}`,\n    },\n  });\n};\n\nexport const fetchEventHistoryData = () => {\n  return axios.get('/api/event-history-data');\n};\n\nexport const saveEventData = (payload) => {\n  return axios.post('/api/event-history-data', payload, config);\n};\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { \n  receiveEventData, \n  eventDataNotFound,\n  fetchEventHistoryData as fetchEventHistoryDataAction,\n  receiveEventHistoryData,\n  eventHistoryDataNotFound\n} from './actions';\nimport { fetchEventData, fetchEventHistoryData, saveEventData } from './requests';\nimport {\n  FETCH_EVENT_DATA,\n  SAVE_EVENT_DATA,\n  FETCH_EVENT_HISTORY_DATA,\n} from './types';\n\nexport function* fetchEventDataSaga({payload}) {\n  try {\n    const { data, status } = yield call(fetchEventData, payload);\n    switch (status) {\n      case 200:\n        yield put(receiveEventData(data));\n        break;\n      case 401:\n        yield put(eventDataNotFound());\n        break;\n      default:\n        yield put(eventDataNotFound());\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to fetch event data with error \"%s\"', error);\n    yield put(eventDataNotFound());\n  }\n};\n\nexport function* saveEventDataSaga({payload}) {\n  try {\n    const { status } = yield call(saveEventData, payload);\n    switch (status) {\n      case 200:\n        yield put(fetchEventHistoryDataAction());\n        break;\n      default:\n        yield put(eventHistoryDataNotFound());\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to save event data with error \"%s\"', error);\n  }\n};\n\nexport function* fetchEventHistoryDataSaga() {\n  try {\n    const { data, status } = yield call(fetchEventHistoryData);\n    switch (status) {\n      case 200:\n        yield put(receiveEventHistoryData(data.eventData));\n        break;\n      default:\n        yield put(eventHistoryDataNotFound());\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to fetch event history data with error \"%s\"', error);\n    yield put(eventHistoryDataNotFound());\n  }\n};\n\nexport default function* counterSaga() {\n  yield all([\n    fork(function*() {\n      yield takeEvery(FETCH_EVENT_DATA, fetchEventDataSaga);\n      yield takeEvery(SAVE_EVENT_DATA, saveEventDataSaga);\n      yield takeEvery(FETCH_EVENT_HISTORY_DATA, fetchEventHistoryDataSaga);\n    }),\n  ]);\n};","import { createAction } from 'redux-actions';\nimport {\n  SIGNUP, \n  LOGIN, \n  ACCESS_TOKEN_NOT_FOUND, \n  RECEIVE_ACCESS_TOKEN,\n  LOGOUT,\n} from './types';\n\nexport const signUp = payload => createAction(SIGNUP)(payload);\n\nexport const login = payload => createAction(LOGIN)(payload);\n\nexport const receiveAccessToken = payload => createAction(RECEIVE_ACCESS_TOKEN)(payload);\n\nexport const accessTokenNotFound = payload => createAction(ACCESS_TOKEN_NOT_FOUND)(payload);\n\nexport const logout = () => createAction(LOGOUT)();\n","import axios from 'axios';\nimport { config } from '../utils/config';\n\nexport const signUp = (payload) => {\n  return axios.post('https://opendata.hopefully.works/api/signup', payload, config);\n};\n\nexport const login = (payload) => {\n  return axios.post('https://opendata.hopefully.works/api/login', payload, config);\n};","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { receiveAccessToken, accessTokenNotFound } from './actions';\nimport { SIGNUP, LOGIN } from './types';\n\nimport { login, signUp } from './requests';\n\nexport function* signUpSaga({payload}) {\n  try {\n    const { data, status } = yield call(signUp, payload);\n    switch (status) {\n      case 200:\n        yield put(receiveAccessToken(data));\n        break;\n      default:\n        yield put(accessTokenNotFound('Sign up error: User already exists'));\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to sign up with error \"%s\"', error);\n    yield put(accessTokenNotFound('Sign up error: User already exists'));\n  }\n}\n\nexport function* loginSaga({payload}) {\n  try {\n    const { data, status } = yield call(login, payload);\n    switch (status) {\n      case 200:\n        yield put(receiveAccessToken(data));\n        break;\n      default:\n        yield put(accessTokenNotFound('Login error: User does not exists'));\n        break;\n    }\n  } catch (error) {\n    console.error('Failed to login with error \"%s\"', error);\n    yield put(accessTokenNotFound('Login error: User does not exists'));\n  }\n}\n\nexport default function* authSaga() {\n  yield all([\n    fork(function*() {\n      yield takeEvery(SIGNUP, signUpSaga);\n      yield takeEvery(LOGIN, loginSaga);\n    }),\n  ]);\n}","import { all, fork } from 'redux-saga/effects';\nimport eventDataSaga from '../eventData/saga';\nimport authSaga from '../auth/saga';\n\nexport default function* rootSaga() {\t  \n  yield all([\t    \n    fork(eventDataSaga),\n    fork(authSaga),\n  ]);\n}","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { createInjectorsEnhancer } from 'redux-injectors';\nimport createReducer from './rootReducer';\nimport rootSaga from './rootSaga';\nimport { createBrowserHistory } from 'history';\n\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\n\nexport const history = createBrowserHistory();\n\nexport default function configureAppStore(initialState = {}) {\n  const reduxSagaMonitorOptions = {};\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n  const { run: runSaga } = sagaMiddleware;\n\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n  const enhancers = [\n    createInjectorsEnhancer({\n      createReducer,\n      runSaga,\n    }),\n  ];\n\n  const router = { \n    router: connectRouter(history),\n  };\n\n  const store = configureStore({\n    reducer: createReducer(router),\n    middleware: [\n      ...getDefaultMiddleware(),\n      ...middlewares\n    ],\n    preloadedState: initialState,\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers,\n  });\t\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { RootState } from '../root/rootReducer';\nimport { Routes, getRouteById } from '../root/routes';\nimport { logout } from '../auth/actions';\n\nimport './topNavigation.scss'; \n\nconst TopNavigation = ({ logout }) => {\n  return (\n    <div className='top-navigation'>\n      <Link to={getRouteById(Routes.HOME)}>\n        Home\n      </Link>\n      <Link to={getRouteById(Routes.HOME)} onClick={() => logout()}>\n        Logout\n      </Link>\n    </div>\n  );\n};\n    \nconst mapDispatchToProps = {\n  logout,\n};\n\nconst mapStateToProps = (state: RootState) => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TopNavigation));","import React, { useState }  from 'react';\nimport { connect } from 'react-redux';\nimport { RootState } from '../root/rootReducer';\nimport {\n  signUp,\n  login,\n} from './actions';\n\nimport './loginForm.scss';\n\nconst LoginForm = ( props ) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newUser, setNewUser] = useState(false);\n\n  const onSubmit = event => {\n    const { signUp, login } = props;\n    \n    const payload = ({\n      email: email, \n      password: password,\n    });\n    \n    if(newUser)\n      signUp(payload)\n    else \n      login(payload)\n\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"login-form\">\n      <form onSubmit={onSubmit}>\n        {\"Please login\"}\n        <input\n          name=\"email\"\n          value={email}\n          type=\"text\"\n          placeholder=\"Email Address\"\n          onChange={e => setEmail(e.target.value)}\n        />\n        <input\n          name=\"password\"\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={e => setPassword(e.target.value)}\n        />\n        <label>New user</label>\n        <input\n          name=\"newUser\"\n          value={newUser}\n          type=\"checkbox\"\n          onChange={() => setNewUser(!newUser)}\n        />\n        <button type=\"submit\" disabled={password === '' || email === ''}>\n          Sign In\n        </button>\n\n        {props.errorMessage && <p>{props.errorMessage}</p>}\n      </form>\n    </div>\n  )\n};\n\nconst mapDispatchToProps = {\n  signUp,\n  login,\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  email: state.auth.email,\n  accessToken: state.auth.accessToken,\n  isFetching: state.auth.isFetching,\n  errorMessage: state.auth.errorMessage,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RootState } from './root/rootReducer';\nimport TopNavigation from './topNavigation/topNavigation';\nimport LoginForm from './auth/loginForm';\n\nimport './App.scss';\n\nconst App = ( props ) => {\n  if (!props.email || !props.accessToken)\n    return (\n      <LoginForm />\n    )\n\n  return (\n    <div className=\"body\">\n      <TopNavigation/>\n      {props.children}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  email: state.auth.email,\n  accessToken: state.auth.accessToken,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","export const formatDate = (date) => {\n  return `${new Date(date).toLocaleDateString(\"fi-FI\")} ${new Date(date).toLocaleTimeString(\"fi-FI\")}`;\n};\n","import React from 'react';\nimport { formatDate } from '../utils/formatDate';\nimport './eventDataTable.scss';\n\nexport const EventDataTable = ({ data }) => \n<div>\n  <table className='event-data-table'>\n    <caption>Event Data</caption>\n    <thead>\n      <tr>\n        <th>Sensor</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Date</td>\n        <td>{formatDate(data.date)}</td>\n      </tr>\n      <tr>\n        <td>Sensor 1</td>\n        <td>{data.sensor1}</td>\n      </tr>\n      <tr>\n        <td>Sensor 2</td>\n        <td>{data.sensor2}</td>\n      </tr>\n      <tr>\n        <td>Sensor 3</td>\n        <td>{data.sensor3}</td>\n      </tr>\n      <tr>\n        <td>Sensor 4</td>\n        <td>{data.sensor4}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>;","import React, { useState } from 'react';\nimport { formatDate } from '../utils/formatDate';\nimport './eventDataTable.scss';\n\nexport const EventHistoryDataTable = ({ eventHistoryData }) => {\n  const [index, setIndex] = useState(0);\n  const data = eventHistoryData[index];\n  const length = eventHistoryData.length;\n  \n  if(data)\n    return (\n      <div>\n        <table className='event-data-table'>\n          <caption>History Data</caption>\n          <thead>\n            <tr>\n              <th>Sensor</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Date</td>\n              <td>{formatDate(data.date)}</td>\n            </tr>\n            <tr>\n              <td>Sensor 1</td>\n              <td>{data.sensor1}</td>\n            </tr>\n            <tr>\n              <td>Sensor 2</td>\n              <td>{data.sensor2}</td>\n            </tr>\n            <tr>\n              <td>Sensor 3</td>\n              <td>{data.sensor3}</td>\n            </tr>\n            <tr>\n              <td>Sensor 4</td>\n              <td>{data.sensor4}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div className='control-buttons'>\n          <button disabled={index === 0} onClick={() => setIndex(index - 1)}>\n            {'<'}\n          </button>\n          <button disabled={index === (length - 1)} onClick={() => setIndex(index + 1)}>\n            {'>'}\n          </button>\n        </div>\n      </div>\n    );\n  else\n    return <div>No Event History Data</div>\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { RootState } from '../root/rootReducer';\nimport {\n  fetchEventData,\n  saveEventData,\n  fetchEventHistoryData,\n} from './actions';\nimport { EventDataTable } from './eventDataTable';\nimport { EventHistoryDataTable } from './eventHistoryDataTable';\n\nimport './eventDataPage.scss'; \n\nconst EventDataPage = ({ \n  fetchEventData, \n  eventData,\n  isFetchingEventData,\n  isFetchingEventHistoryData,\n  eventHistoryData,\n  accessToken,\n  saveEventData,\n  fetchEventHistoryData,\n}) => {\n  useEffect(() => {\n    if(!isFetchingEventData && !eventData && accessToken && !eventHistoryData)\n      fetchEventData(accessToken);\n      fetchEventHistoryData();\n  }, []); // eslint-disable-line\n\n  const saveEventDataFunction = () => {\n    if(!isFetchingEventHistoryData)\n      saveEventData(eventData);\n  }\n\n  if(!eventData && isFetchingEventData)\n    return (<div>Loading</div>)\n\n  return (\n    <div className='event-data-content'>\n      {eventData && <EventDataTable data={eventData} />}\n      <button onClick={() => saveEventDataFunction()}>\n        Save event data\n      </button>\n      {isFetchingEventHistoryData && <div>Loading</div>}\n      {(!isFetchingEventHistoryData && eventHistoryData) && \n        <EventHistoryDataTable eventHistoryData={eventHistoryData}/>}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  fetchEventData,\n  fetchEventHistoryData,\n  saveEventData,\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  isFetchingEventData: state.eventData.isFetchingEventData,\n  isFetchingEventHistoryData: state.eventData.isFetchingEventHistoryData,\n  eventData: state.eventData.eventData,\n  eventHistoryData: state.eventData.eventHistoryData,\n  accessToken: state.auth.accessToken,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDataPage);","import React from 'react';\nimport './errorPage.scss'; \n\nconst ErrorPage = () => {\n  return (\n    <div className={'error-page'}>\n      404 Page not found\n    </div>\n  );\n}\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport App from '../App';\nimport EventDataPage from '../eventData/eventDataPage';\nimport ErrorPage from '../errorPage/errorPage';\n\nexport const Routes = {\n  HOME: 'home',\n};\n\nexport const getRouteById = (id: string): string => {\n  const routes = {\n    [Routes.HOME]: '/',\n  };\n  return routes[id] ? routes[id] : '';\n};\n\nexport default\n<App>\n  <Switch>\n    <Route exact path='/' component={EventDataPage} />\n    <Route component={ErrorPage} />\n  </Switch>\n</App>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport configureStore, { history } from './root/storeConfig';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport routes from './root/routes';\nconst initialState = {};\nconst store = configureStore(initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      {routes}\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}